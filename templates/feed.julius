document.addEventListener("DOMContentLoaded", function(event) {
    fillPasswords();
    makeRefmap();
    initAllPosts();
    initCodeButton('edit-form',#{toJSON $ msgrender MsgPlainText});
    initSymbolCounter('edit-form');
    initMathjax();
});

function refreshFeed() {
    var allPosts = document.querySelectorAll(".op-post, .reply-post");
    var lastPost = allPosts[0];
    if (! lastPost) return;
    var lastPostId = lastPost.id.slice(1);
    var ictr = document.querySelector("#refresh-feed .icon-thread-refresh");
    var ajxl = document.querySelector("#refresh-feed .ajax-loading");
    if (ictr != null) toggleInline(ictr);
    if (ajxl != null) toggleInline(ajxl);
    httpRequest({
        action: "/ajax/newfeed/"+lastPostId,
        onloadBefore: function() {
            if (ictr != null) toggleInline(ictr);
            if (ajxl != null) toggleInline(ajxl);
        },
        onloadOk: function(request) {
            var data = request.responseText;
            if (/post/.test(data)) {
                var posts = parseDOMElements(data);
                var rf     = document.getElementById('refresh-feed');
                var parent = rf.parentNode;
                for (var i = posts.length-1; i >= 0; i--) {
                    initOnePost(posts[i]);
                    insertAfter(posts[i], rf);
                }
                makeRefmap();
                initPopupsCache();
                refreshMathjax();
            } else {
                popupMessage( #{toJSON $ msgrender MsgNoNewPosts}, Monaba.cnf.popupMessageDelay);
            }
        }
    });
}

function showQuickPostForm(postId) {
    var postform = document.getElementById('post-form');    
    if (postform)
        postform.parentNode.removeChild(postform);
    var post  = document.getElementById(postId);
    var board = post.dataset.board;
    var threadLocalId = post.dataset.threadLocalId;
    if (threadLocalId == 0) threadLocalId = post.dataset.postLocalId;
    httpRequest({
        action: '/ajax/postform/'+board,
        onloadOk: function(request) {
            var wrapper = document.createElement("div");
            wrapper.innerHTML = request.responseText;
            var postform = wrapper.children[0];
            insertAfter(postform, post);
            insert('>>'+post.dataset.postLocalId+'\n','post-form');
            initPostForm();
            initCodeButton('post-form',#{toJSON $ msgrender MsgPlainText});
            initSymbolCounter('post-form');
            fillPasswords();
            postform.action = '/'+board+'/'+threadLocalId;
            postform.onsubmit = function(event) {
                var formData = makePostFormData(postform);
                var pmsg;
                httpRequest({
                    method: 'POST',
                    action: postform.action,
                    data: formData,
                    onloadstart: function() {
                        pmsg = popupMessage(#{toJSON $ msgrender MsgLoading}, null, true);
                    },
                    onloadBefore: function() {
                        refreshCaptcha();
                        closePopupMessage(pmsg);
                    },
                    onloadOk: function(request) {
                        var data = JSON.parse(request.responseText);
                        if (data.ok) {
                            clearPostFormFields();
                            popupMessage(data.ok, Monaba.cnf.popupMessageDelay);
                            closePostForm();
                            refreshFeed();
                        } else {
                            popupMessage(data.error, Monaba.cnf.popupMessageDelay);
                        }
                    }
                });
                event.preventDefault();
            };

            var rt = postform.getElementsByClassName("reply-to");
            if (rt.length) rt[0].parentNode.removeChild( rt[0] );
            var span = document.createElement("span");
            span.className = 'reply-to';
            span.innerHTML = #{toJSON $ msgrender MsgReplyToThread}+threadLocalId;
            insertAfter( span, postform.querySelector('input[type=submit]') );
        }
    });
} 

function loadPreviousPosts(baseOffset) {
    var offset = document.getElementById('load-previous-posts').dataset.offset;
    Array.prototype.forEach.call(document.querySelectorAll('.ajax-loading'), function(el,i) { toggleInline(el); });
    httpRequest({
        action: '/ajax/feed/'+offset,
        onloadOk: function(request) {
            Array.prototype.forEach.call(document.querySelectorAll('.ajax-loading'), function(el,i) { toggleInline(el); });
            var lpp = document.getElementById('load-previous-posts');
            var parent = document.getElementById('load-previous-posts').parentNode;
            var wrapper = document.createElement("div");
            wrapper.innerHTML = request.responseText;
            var posts = wrapper.children;
            for (var i = 0; i < posts.length; i++) {
                initOnePost(posts[i]);
                parent.insertBefore(posts[i], lpp);
            }
            makeRefmap();
            initPopupsCache();
            refreshMathjax();
            document.getElementById('load-previous-posts').dataset.offset = +offset+baseOffset;
        }
    });
}
 
