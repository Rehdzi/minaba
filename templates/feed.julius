document.addEventListener("DOMContentLoaded", function(event) {
    fillPasswords();
    makeRefmap();
    initAllPosts();
    initCodeButton('edit-form',#{toJSON $ msgrender MsgPlainText});
    initSymbolCounter('edit-form');
    initMathjax();
});

function showQuickPostForm(postId) {
    var postform = document.getElementById('post-form');    
    if (postform)
        postform.parentNode.removeChild(postform);
    var post  = document.getElementById(postId);
    var board = post.dataset.board;
    var threadLocalId = post.dataset.threadLocalId;
    var request = new XMLHttpRequest();
    request.open('GET','/ajax/postform/'+board, true);
    request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    request.onload = function() {
        if (request.status >= 200 && request.status < 400) {
            var wrapper = document.createElement("div");
            wrapper.innerHTML = request.responseText;
            var postform = wrapper.children[0];
            insertAfter(postform, post);
            initPostForm();
            initCodeButton('post-form',#{toJSON $ msgrender MsgPlainText});
            initSymbolCounter('post-form');
            fillPasswords();
            postform.action = '/'+board+'/'+threadLocalId;
            // postform.onsubmit = function(event) {
            //     var inputs = postform.getElementsByTagName("input");
            //     var formData = new FormData();
            //     for (var i = 0; i < inputs.length; i++) {
            //         if (inputs[i].type == "submit") {
            //             ;
            //         } else if (inputs[i].type == "file" && inputs[i].files != null) {
            //             formData.append(inputs[i].name, inputs[i].files[0]);
            //         } else if (inputs[i].type == "checkbox") {
            //             if (inputs[i].checked)
            //                 formData.append(inputs[i].name, inputs[i].value);
            //         } else {
            //             formData.append(inputs[i].name, inputs[i].value);
            //         }
            //     }
            //     var textarea = postform.getElementsByTagName("textarea")[0];
            //     formData.append(textarea.name, textarea.value);
            //     var select = postform.getElementsByTagName("select")[0];
            //     formData.append(select.name, 1);

            //     var pmsg;
            //     var request = new XMLHttpRequest();
            //     request.open('POST', postform.action, true);
            //     request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            //     request.onloadstart = function() {
            //         pmsg = popupMessage(#{toJSON $ msgrender MsgLoading}, null, true);
            //     };
            //     request.onload = function() {
            //         refreshCaptcha();
            //         closePopupMessage(pmsg);
            //         if (request.status >= 200 && request.status < 400) {
            //             var data = JSON.parse(request.responseText);
            //             if (data.ok) {
            //                 popupMessage(data.ok, Monaba.cnf.popupMessageDelay);
            //             } else {
            //                 popupMessage(data.error, Monaba.cnf.popupMessageDelay);
            //             }
            //         } else {
            //             popupMessage(request.responseText+" ("+request.status+")", 0, false, true);
            //         }
            //     };
            //     request.onerror = function() {
            //         popupMessage(#{toJSON $ msgrender MsgConnectionError}+" ("+request.statusText+")", 0, false, true);
            //     };
            //     request.send(formData);
            //     event.preventDefault();
            // };
            var rt = postform.getElementsByClassName("reply-to");
            if (rt.length) rt[0].parentNode.removeChild( rt[0] );
            var span = document.createElement("span");
            span.className = 'reply-to';
            span.innerHTML = #{toJSON $ msgrender MsgReplyToThread}+threadLocalId;
            insertAfter( span, postform.querySelector('input[type=submit]') );
        } else {
            popupMessage(request.responseText+" ("+request.status+")", 0, false, true);
        }
    };
    request.onerror = function() {
        popupMessage(#{toJSON $ msgrender MsgConnectionError}+" ("+request.status+")", 0, false, true);
    };
    request.send();
} 

function loadPreviousPosts(baseOffset) {
    var offset = document.getElementById('load-previous-posts').dataset.offset;
    Array.prototype.forEach.call(document.querySelectorAll('.ajax-loading'), function(el,i) { toggleInline(el); });
    
    var request = new XMLHttpRequest();
    request.open('GET','/ajax/feed/'+offset, true);
    request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    request.onload = function() {
        if (request.status >= 200 && request.status < 400) {
            Array.prototype.forEach.call(document.querySelectorAll('.ajax-loading'), function(el,i) { toggleInline(el); });
            var lpp = document.getElementById('load-previous-posts');
            var parent = document.getElementById('load-previous-posts').parentNode;
            var wrapper = document.createElement("div");
            wrapper.innerHTML = request.responseText;
            var posts = wrapper.children;
            for (var i = 0; i < posts.length; i++) {
                initOnePost(posts[i]);
                parent.insertBefore(posts[i], lpp);
            }
            makeRefmap();
            initPopupsCache();
            refreshMathjax();
            document.getElementById('load-previous-posts').dataset.offset = +offset+baseOffset;
        } else {
            popupMessage(request.responseText+" ("+request.status+")", 0, false, true);
        }
    };
    request.onerror = function() {
        popupMessage(#{toJSON $ msgrender MsgConnectionError}+" ("+request.status+")", 0, false, true);
    };
    request.send();
}
 
