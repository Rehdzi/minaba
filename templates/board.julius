function expandThread(board, threadLocalId) {
    var thread  = document.getElementById("thread-"+threadLocalId);
    var ajxl    = thread.querySelector(".omitted .ajax-loading");
    var omitted = thread.getElementsByClassName("omitted")[0];
    var tt      = thread.getElementsByClassName("truncate-thread")[0];
    var tta     = thread.getElementsByClassName("truncate-thread-after")[0];
    delete Monaba['expThreads'][threadLocalId];
    var newReplies = [];
    var origReplies = thread.getElementsByClassName("reply-post");
    for (var i = 0; i < origReplies.length; i++)
        newReplies.push( origReplies[i].cloneNode(true) );
    Monaba['expThreads'][threadLocalId] = newReplies;

    toggleInline(ajxl);
    var request = new XMLHttpRequest();
    request.open("GET", "/ajax/thread/"+board+"/"+threadLocalId+"/all", true);
    request.onload = function() {
        var data = request.responseText;
        if (data == "No such thread ") {
            popupMessage(#{toJSON $ msgrender MsgThreadNotExist}, 2000);
            delete Monaba['expThreads'][threadLocalId];
            toggleInline(ajxl);
        } else if (data == "No posts in this thread ") {
            popupMessage(#{toJSON $ msgrender MsgNoPostsAnymore}, 2000);
            delete Monaba['expThreads'][threadLocalId];
            toggleInline(ajxl);
        } else {
            toggleInline(ajxl);
            toggleInline(omitted);
            while (origReplies.length)
                thread.removeChild(origReplies[0]);
            toggleInline(tt);
            toggleInline(tta);

            var wrapper = document.createElement("div");
            wrapper.innerHTML = data;
            var posts = wrapper.children;
            while (posts.length) {
                initOnePost(posts[0]);
                thread.insertBefore(posts[0], tta);
            }
            makeRefmap();
            initPopupsCache();
            // MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
        }
    };
    request.send();
}

function truncateThread(threadLocalId,scrollToThreadBottom) {
    var thread  = document.getElementById("thread-"+threadLocalId);
    var ajxl    = thread.querySelector(".omitted .ajax-loading");
    var omitted = thread.getElementsByClassName("omitted")[0];
    var tt      = thread.getElementsByClassName("truncate-thread")[0];
    var tta     = thread.getElementsByClassName("truncate-thread-after")[0];
    var oldReplies  = Monaba['expThreads'][threadLocalId];
    var origReplies = thread.getElementsByClassName("reply-post");
    delete Monaba['expThreads'][threadLocalId];
    toggleInline(omitted);
    while (origReplies.length)
        thread.removeChild(origReplies[0]);
    toggleInline(tt);
    toggleInline(tta);
    for (var i = 0; i < oldReplies.length; i++) {
        thread.insertBefore(oldReplies[i], tta);
    }
    if (scrollToThreadBottom) {
        // var n = $("#thread-"+thread+" .reply-post:last .post-header .reflink a").attr("name");
        // location.href = "#"+n;
    }
}

// function showQuickPostForm(postId) {
//     $("#post-form").removeClass().addClass("quick-post-form");
//     $("#p"+postId).after($("#post-form"));
//     $("#post-form").css("display","table");
//     $("#go-back-block").hide();
    
//     var action = $("#post-form").attr('action');
//     var thread = /thread-(\d+)/.exec( $("#post-form").parent().attr('id') )[1];
//     var board = $("#post-form").data('board');

//     $('#post-form').ajaxForm({
//         beforeSend: function() {
//             popupMessage(#{toJSON $ msgrender MsgLoading}, null, true);
//         },
//         success: function(data) {
//             closePopupMessage();
//             if (data.ok) {
//                 $('#post-form input[type=text]').clearFields();
//                 $('#post-form input[type=file]').clearFields();
//                 $('#post-form textarea').clearFields();
//                 popupMessage(data.ok,2000);
//                 closePostForm();
//                 refreshThread(board, thread)
//             } else {
//                 popupMessage(data.error,2000);
//             }
//         }
//     }); 

//     $("#post-form").children().find('.reply-to').remove();
//     $("#post-form").children().find('input[type=submit]').after(" <span class='reply-to'>"+#{toJSON $ msgrender MsgReplyToThread}+thread+"</span>")
//     $("#no-bump-block").css("display","");
//     var newUrl = "/"+board+"/"+thread;
//     $("#post-form").attr('action', newUrl);
// } 

// function showPlainPostForm() {
//     $("#post-form").removeClass().addClass("plain-post-form");
//     $("#post-form").children().find('.reply-to').remove();
//     $('.show-plain-form').after($("#post-form"));
//     $(".show-plain-form").hide();
//     $("#post-form").css("display","block");

//     $("#post-form").unbind();
//     $("#no-bump-block").hide();
//     $("#go-back-block").css("display","");

//     var board = $("#post-form").data('board');
//     $("#post-form").attr('action', '/'+board);
// }
